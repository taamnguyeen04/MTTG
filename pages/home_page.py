import streamlit as st
import time
from utils import text_to_speech

def home_page():
    """Hi·ªÉn th·ªã trang ch·ªß gi·ªõi thi·ªáu h·ªá th·ªëng"""
    # ======= CSS T√ôY CH·ªàNH =======
    st.markdown("""
    <style>
        /* Ti√™u ƒë·ªÅ ch√≠nh */
        .main-header {
            text-align: center;
            padding: 2rem;
            background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);
            color: white;
            border-radius: 15px;
            margin: 1rem 0;
            box-shadow: 0 4px 15px rgba(76,175,80,0.3);
        }

        /* Card gi·ªõi thi·ªáu */
        .feature-card {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin: 1.5rem 0;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            border: 1px solid #e0e0e0;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        /* N√∫t l·ªõp h·ªçc */
        .class-card {
            padding: 2rem;
            border-radius: 15px;
            background: linear-gradient(145deg, #f5f5f5 0%, #ffffff 100%);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            text-align: center;
            min-height: 180px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .class-card:hover {
            transform: scale(1.03);
            box-shadow: 0 8px 25px rgba(76,175,80,0.2);
            background: linear-gradient(145deg, #e8f5e9 0%, #ffffff 100%);
        }

        /* H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng */
        .guide-step {
            padding: 1.5rem;
            background: #f8f9fa;
            border-left: 4px solid #4CAF50;
            margin: 1rem 0;
            border-radius: 8px;
        }

        /* Th√¥ng tin li√™n h·ªá */
        .contact-card {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 2rem;
            margin-top: 2rem;
            text-align: center;
        }

        .badge {
            display: inline-block;
            padding: 0.5rem 1rem;
            background: #4CAF50;
            color: white;
            border-radius: 20px;
            margin: 0.5rem;
            font-size: 0.9rem;
        }
    </style>
    """, unsafe_allow_html=True)

    # ======= PH·∫¶N N·ªòI DUNG =======
    # Header ch√≠nh
    st.markdown("""
    <div class="main-header">
        <h1 style="margin:0; font-size:2.5rem">üìö H·ªá th·ªëng k√≠ch th√≠ch t∆∞ duy h·ªçc t·∫≠p v√† h·ªó tr·ª£ ƒëi·ªÅu ch·ªânh t∆∞ th·∫ø ng·ªìi th√¥ng minh d√†nh cho ng∆∞·ªùi khi·∫øm th·ªã</h1>
    </div>
    """, unsafe_allow_html=True)
    text_to_speech("H·ªá th·ªëng k√≠ch th√≠ch t∆∞ duy h·ªçc t·∫≠p v√† h·ªó tr·ª£ ƒëi·ªÅu ch·ªânh t∆∞ th·∫ø ng·ªìi th√¥ng minh cho ng∆∞·ªùi khi·∫øm th·ªã")
    time.sleep(1)

    # Gi·ªõi thi·ªáu h·ªá th·ªëng
    with st.container():
        st.markdown("""
        <div class="feature-card">
            <h3 style="color:#2E7D32; margin-top:0">üåê Gi·ªõi Thi·ªáu H·ªá Th·ªëng</h3>
            <p style="font-size:1.05rem; line-height:1.6">
            H·ªá th·ªëng t√≠ch h·ª£p c√¥ng ngh·ªá AI ti√™n ti·∫øn h·ªó tr·ª£ h·ªçc t·∫≠p ƒëa ph∆∞∆°ng th·ª©c v·ªõi:
            </p>
            <div style="display: flex; gap:1rem; flex-wrap:wrap;">
                <span class="badge">üé§ Nh·∫≠n di·ªán gi·ªçng n√≥i</span>
                <span class="badge">üìñ H·ªçc li·ªáu ƒëa d·∫°ng</span>
                <span class="badge">ü§ñ Tr·ª£ l√Ω ·∫£o th√¥ng minh</span>
                <span class="badge">üìä B√°o c√°o h·ªçc t·∫≠p</span>
            </div>
        </div>
        """, unsafe_allow_html=True)

        if st.button("üîä Nghe gi·ªõi thi·ªáu h·ªá th·ªëng", use_container_width=True):
            intro_text = """
                        H·ªá th·ªëng ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ h·ªó tr·ª£ h·ªçc sinh, 
                        ƒë·∫∑c bi·ªát l√† h·ªçc sinh khi·∫øm th·ªã, ti·∫øp c·∫≠n ki·∫øn th·ª©c d·ªÖ d√†ng th√¥ng qua 
                        ƒëa d·∫°ng h√¨nh th·ª©c: vƒÉn b·∫£n, √¢m thanh, h√¨nh ·∫£nh v√† t∆∞∆°ng t√°c.
                        """
            text_to_speech(intro_text)

    # L·ªõp h·ªçc
    st.markdown("### üìö Ch·ªçn L·ªõp H·ªçc")
    cols = st.columns(3)
    class_info = {
        1: {"color": "#4CAF50", "icon": "üßÆ"},
        2: {"color": "#2196F3", "icon": "üìö"},
        3: {"color": "#9C27B0", "icon": "üåç"},
        4: {"color": "#FF9800", "icon": "‚öõÔ∏è"},
        5: {"color": "#E91E63", "icon": "üé®"}
    }

    for i in range(1, 6):
        with cols[(i - 1) % 3]:
            info = class_info[i]
            html = f"""
            <div class="class-card" onclick="window.location.href='?class={i}'">
                <div style="font-size:2.5rem; margin-bottom:1rem">{info['icon']}</div>
                <h3 style="margin:0; color:{info['color']}">L·ªõp {i}</h3>
            </div>
            """
            st.markdown(html, unsafe_allow_html=True)
    intro_text = """
                            H·ªá th·ªëng ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ h·ªó tr·ª£ h·ªçc sinh, 
                            ƒë·∫∑c bi·ªát l√† h·ªçc sinh khi·∫øm th·ªã, ti·∫øp c·∫≠n ki·∫øn th·ª©c d·ªÖ d√†ng th√¥ng qua 
                            ƒëa d·∫°ng h√¨nh th·ª©c: vƒÉn b·∫£n, √¢m thanh, h√¨nh ·∫£nh v√† t∆∞∆°ng t√°c.
                            """
    text_to_speech(intro_text)
    time.sleep(3)
    # text_to_speech("B·∫°n mu·ªën v√†o l·ªõp m·∫•y?")
    # # speech = recognize_speech().lower()
    # time.sleep(2)
    # speech = "l·ªõp 4"
    # # Nh·∫≠n di·ªán l·ªõp h·ªçc
    # for i in range(1, 6):
    #     if f"l·ªõp {i}" in speech:
    #         text_to_speech(f"B·∫°n ƒë√£ ch·ªçn l·ªõp {i}")
    #         st.session_state.selected_class = i
    #         break

    if "guide_read" not in st.session_state:
        st.session_state.guide_read = False

    # H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng (theo c√°c ph√≠m t·∫Øt ALT)
    with st.expander("üìò H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng Nhanh B·∫±ng B√†n Ph√≠m", expanded=False):
        st.markdown("""
        <div class="guide-step">
            <h4>üéØ ƒêi·ªÅu h∆∞·ªõng nhanh</h4>
            <ul>
                <li><b>Alt + 1</b>: V·ªÅ trang ch·ªß</li>
                <li><b>Alt + 2</b>: M·ªü trang b√†i h·ªçc</li>
                <li><b>Alt + 3</b>: M·ªü trang ki·ªÉm tra ki·∫øn th·ª©c</li>
                <li><b>Alt + 4</b>: M·ªü trang h·ªó tr·ª£ h·ªçc t·∫≠p</li>
            </ul>
        </div>

        <div class="guide-step">
            <h4>üÉè Flashcard</h4>
            <ul>
                <li><b>Alt + M</b>: Chuy·ªÉn sang flashcard ti·∫øp theo</li>
                <li><b>Alt + B</b>: Ph√°t ti·∫øng Anh c·ªßa flashcard</li>
                <li><b>Alt + V</b>: Ph√°t ti·∫øng Vi·ªát c·ªßa flashcard</li>
                <li><b>Alt + N</b>: Ph√°t ti·∫øng Nh·∫≠t c·ªßa flashcard</li>
            </ul>
        </div>

        <div class="guide-step">
            <h4>üé§ Gi·ªçng n√≥i</h4>
            <ul>
                <li><b>Alt + 5</b>: B·∫≠t ch·∫ø ƒë·ªô ƒëi·ªÅu khi·ªÉn b·∫±ng gi·ªçng n√≥i</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)

        # T·ª± ƒë·ªông ƒë·ªçc h∆∞·ªõng d·∫´n n·∫øu ch∆∞a ƒë·ªçc
        if not st.session_state.guide_read:
            huong_dan = """
            H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng b·∫±ng ph√≠m t·∫Øt:
            Alt + 1 ƒë·ªÉ v·ªÅ trang ch·ªß.
            Alt + 2 ƒë·ªÉ m·ªü trang b√†i h·ªçc.
            Alt + 3 ƒë·ªÉ m·ªü trang ki·ªÉm tra ki·∫øn th·ª©c.
            Alt + 4 ƒë·ªÉ m·ªü trang h·ªó tr·ª£ h·ªçc t·∫≠p.
            Alt + M ƒë·ªÉ chuy·ªÉn sang flashcard ti·∫øp theo.
            Alt + B ƒë·ªÉ nghe ph√°t √¢m ti·∫øng Anh.
            Alt + V ƒë·ªÉ nghe ph√°t √¢m ti·∫øng Vi·ªát.
            Alt + N ƒë·ªÉ nghe ph√°t √¢m ti·∫øng Nh·∫≠t.
            Alt + 5 ƒë·ªÉ b·∫≠t ƒëi·ªÅu khi·ªÉn b·∫±ng gi·ªçng n√≥i.
            """
            text_to_speech(huong_dan)
            st.session_state.guide_read = True

    # Th√¥ng tin li√™n h·ªá
    st.markdown("""
    <div class="contact-card">
        <h3 style="margin-top:0">üì¨ Li√™n H·ªá H·ªó Tr·ª£</h3>
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap:1rem;">
            <div style="padding:1rem; background:#fff; border-radius:10px;">
                <h4 style="margin:0 0 0.5rem 0">üíå Email</h4>
                <p style="margin:0">support@hocsinhthongminh.vn</p>
            </div>
            <div style="padding:1rem; background:#fff; border-radius:10px;">
                <h4 style="margin:0 0 0.5rem 0">üìû Hotline</h4>
                <p style="margin:0">1900 1234 (24/7)</p>
            </div>
        </div>
    </div>
    """, unsafe_allow_html=True)
    # text_to_speech(intro_text)
    time.sleep(1)
    text_to_speech("B·∫°n h·ªçc l·ªõp m·∫•y?")
    # speech = recognize_speech().lower()
    time.sleep(2)
    speech = "l·ªõp 4"
    # Nh·∫≠n di·ªán l·ªõp h·ªçc
    for i in range(1, 6):
        if f"l·ªõp {i}" in speech:
            text_to_speech(f"B·∫°n ƒë√£ ch·ªçn l·ªõp {i}")
            st.session_state.selected_class = i
            break
