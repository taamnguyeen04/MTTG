import streamlit as st
import json
import random
import os

# File l∆∞u c√¢u h·ªèi & k·∫øt qu·∫£
QUESTIONS_FILE = "data/test.json"
RESULTS_FILE = "results.json"


# Load c√¢u h·ªèi t·ª´ file JSON
def load_questions():
    with open(QUESTIONS_FILE, "r", encoding="utf-8") as file:
        return json.load(file)


# L∆∞u k·∫øt qu·∫£ v√†o file JSON
def save_result(username, score):
    results = []
    if os.path.exists(RESULTS_FILE):
        with open(RESULTS_FILE, "r", encoding="utf-8") as file:
            results = json.load(file)

    results.append({"username": username, "score": score})

    with open(RESULTS_FILE, "w", encoding="utf-8") as file:
        json.dump(results, file, indent=4)


# C·∫•u h√¨nh giao di·ªán
st.set_page_config(page_title="Quiz Python", page_icon="üß†", layout="centered")

st.markdown(
    """
    <style>
        .big-title {
            font-size: 35px;
            font-weight: bold;
            text-align: center;
            color: #4CAF50;
        }
        .question {
            font-size: 20px;
            font-weight: bold;
            color: #FF5722;
        }
    </style>
    """,
    unsafe_allow_html=True,
)

st.markdown("<p class='big-title'>üß† Quiz Python</p>", unsafe_allow_html=True)

# Kh·ªüi t·∫°o session state n·∫øu ch∆∞a c√≥
if 'answers' not in st.session_state:
    st.session_state.answers = {}
if 'questions' not in st.session_state:
    st.session_state.questions = []
if 'submitted' not in st.session_state:
    st.session_state.submitted = False

# Nh·∫≠p t√™n ng∆∞·ªùi ch∆°i
username = st.text_input("Nh·∫≠p t√™n c·ªßa b·∫°n:", placeholder="Nh·∫≠p t√™n...")

if username:
    if not st.session_state.questions:
        st.session_state.questions = load_questions()
        random.shuffle(st.session_state.questions)  # X√°o tr·ªôn c√¢u h·ªèi

    # Hi·ªÉn th·ªã c√°c c√¢u h·ªèi
    for i, q in enumerate(st.session_state.questions):
        st.markdown(f"<p class='question'>{i + 1}. {q['cau_hoi']}</p>", unsafe_allow_html=True)

        # T·∫°o key duy nh·∫•t cho m·ªói c√¢u h·ªèi
        question_key = f"q_{i}"

        # N·∫øu ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi cho c√¢u h·ªèi n√†y trong session state, kh·ªüi t·∫°o v·ªõi None
        if question_key not in st.session_state.answers:
            st.session_state.answers[question_key] = None

        # Hi·ªÉn th·ªã radio button v√† l∆∞u c√¢u tr·∫£ l·ªùi v√†o session state
        st.session_state.answers[question_key] = st.radio(
            "Ch·ªçn ƒë√°p √°n:",
            q["dap_an"],
            index=None if st.session_state.answers[question_key] is None else q["dap_an"].index(
                st.session_state.answers[question_key]),
            key=question_key
        )

    if st.button("üéØ N·ªôp b√†i", help="Nh·∫•n ƒë·ªÉ xem ƒëi·ªÉm s·ªë") and not st.session_state.submitted:
        st.session_state.submitted = True
        score = 0

        for i, q in enumerate(st.session_state.questions):
            question_key = f"q_{i}"
            selected_answer = st.session_state.answers.get(question_key)

            if selected_answer == q["dap_an"][ord(q["dap_an_dung"]) - ord("A")]:
                score += 1

        save_result(username, score)
        st.success(f"üéâ {username}, b·∫°n ƒë√£ ho√†n th√†nh! ƒêi·ªÉm s·ªë: {score}/{len(st.session_state.questions)}")

        # Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng
        st.subheader("üìä B·∫£ng x·∫øp h·∫°ng:")
        results = []
        if os.path.exists(RESULTS_FILE):
            with open(RESULTS_FILE, "r", encoding="utf-8") as file:
                results = json.load(file)

        for r in sorted(results, key=lambda x: x["score"], reverse=True):
            st.write(f"üèÖ {r['username']}: {r['score']} ƒëi·ªÉm")
else:
    st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p t√™n tr∆∞·ªõc khi l√†m b√†i!")